/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Paneles;

import Modelo.MenuDiario;
import Persistencia.MenuDiarioData;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FrancoPC
 */
public class VistaMenuDiario extends javax.swing.JPanel {


    private MenuDiarioData menuDiarioData;
    private DefaultTableModel modelo;
    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    
    public VistaMenuDiario() {
        initComponents();
        menuDiarioData = new MenuDiarioData();
        modelo = (DefaultTableModel) jtMenuDiario.getModel();
        cargarDatos();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfCodMenu = new javax.swing.JTextField();
        jdcDia = new com.toedter.calendar.JDateChooser();
        jtfCalorias = new javax.swing.JTextField();
        jrbEstado = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMenuDiario = new javax.swing.JTable();
        jbBuscar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(750, 430));
        setMinimumSize(new java.awt.Dimension(750, 430));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(750, 430));
        jPanel1.setMinimumSize(new java.awt.Dimension(750, 430));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Franco\\ULP\\02. Materias\\1°Año\\2°Cuatrimestre\\Lab. de Programación\\6-Proyecto Final\\Proyect_Final\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\NUTRICIONISTAPROYECTOFINALG15\\src\\imagenes\\MenuDiario2.png")); // NOI18N
        jLabel1.setText("Menu Diario");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Código Del Menu:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Dia:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Calorias Del Menu:");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Estado:");

        jtfCodMenu.setBackground(new java.awt.Color(255, 255, 255));
        jtfCodMenu.setForeground(new java.awt.Color(0, 0, 0));
        jtfCodMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodMenuActionPerformed(evt);
            }
        });

        jdcDia.setBackground(new java.awt.Color(255, 255, 255));
        jdcDia.setForeground(new java.awt.Color(0, 0, 0));

        jtfCalorias.setBackground(new java.awt.Color(255, 255, 255));
        jtfCalorias.setForeground(new java.awt.Color(0, 0, 0));

        jrbEstado.setBackground(new java.awt.Color(255, 255, 255));
        jrbEstado.setForeground(new java.awt.Color(0, 0, 0));

        jtMenuDiario.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jtMenuDiario.setForeground(new java.awt.Color(0, 0, 0));
        jtMenuDiario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod. Menu", "Dias", "Calorias", "Estado"
            }
        ));
        jScrollPane1.setViewportView(jtMenuDiario);

        jbBuscar.setBackground(new java.awt.Color(0, 153, 0));
        jbBuscar.setIcon(new javax.swing.ImageIcon("D:\\Franco\\ULP\\02. Materias\\1°Año\\2°Cuatrimestre\\Lab. de Programación\\6-Proyecto Final\\Proyect_Final\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\NUTRICIONISTAPROYECTOFINALG15\\src\\imagenes\\lupa.png")); // NOI18N
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbGuardar.setBackground(new java.awt.Color(0, 153, 0));
        jbGuardar.setIcon(new javax.swing.ImageIcon("D:\\Franco\\ULP\\02. Materias\\1°Año\\2°Cuatrimestre\\Lab. de Programación\\6-Proyecto Final\\Proyect_Final\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\NUTRICIONISTAPROYECTOFINALG15\\src\\imagenes\\guardar.png")); // NOI18N
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbModificar.setBackground(new java.awt.Color(0, 153, 0));
        jbModificar.setIcon(new javax.swing.ImageIcon("D:\\Franco\\ULP\\02. Materias\\1°Año\\2°Cuatrimestre\\Lab. de Programación\\6-Proyecto Final\\Proyect_Final\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\NUTRICIONISTAPROYECTOFINALG15\\src\\imagenes\\editar.png")); // NOI18N
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbBorrar.setBackground(new java.awt.Color(0, 153, 0));
        jbBorrar.setIcon(new javax.swing.ImageIcon("D:\\Franco\\ULP\\02. Materias\\1°Año\\2°Cuatrimestre\\Lab. de Programación\\6-Proyecto Final\\Proyect_Final\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\--PROYECTO-de-la-REALIDAD--NUTRICIONISTA\\NUTRICIONISTAPROYECTOFINALG15\\src\\imagenes\\tacho.png")); // NOI18N
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCodMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jdcDia, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jrbEstado))))
                        .addGap(78, 78, 78)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBorrar)
                    .addComponent(jbBuscar)
                    .addComponent(jbModificar)
                    .addComponent(jbGuardar))
                .addGap(137, 137, 137))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbBuscar)
                        .addGap(10, 10, 10)
                        .addComponent(jbModificar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtfCodMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jrbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(12, 12, 12)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(jbBorrar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodMenuActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        modificar();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        eliminar();
    }//GEN-LAST:event_jbBorrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModificar;
    private com.toedter.calendar.JDateChooser jdcDia;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JTable jtMenuDiario;
    private javax.swing.JTextField jtfCalorias;
    private javax.swing.JTextField jtfCodMenu;
    // End of variables declaration//GEN-END:variables

    private void cargarDatos() {
            
        modelo.setRowCount(0);
        List<MenuDiario> menus = menuDiarioData.obtenerTodosLosMenusDiarios();
        
        for (MenuDiario menu : menus) {
            modelo.addRow(new Object[]{
                menu.getCodMenu(),
                menu.getDia(),
                menu.getCaloriasDelMenu(),
                menu.getEstado()
            });
        }
    }
    
    private void limpiarCampos() {
        jtfCodMenu.setText("");
        jdcDia.setDate(null);
        jtfCalorias.setText("");
        jrbEstado.setSelected(false);
    }
    
    private void guardar(){
        try {
            MenuDiario menu = new MenuDiario();
            Date fechaSeleccionada = jdcDia.getDate(); 
            
            if (fechaSeleccionada == null) {
                JOptionPane.showMessageDialog(this, "Seleccione un día válido.");
                return;
            }
            menu.setDia(dateFormat.format(fechaSeleccionada)); // Formatea la fecha y guárdala en el objeto
            
            menu.setCaloriasDelMenu(Integer.parseInt(jtfCalorias.getText()));
            menu.setEstado(jrbEstado.isSelected() ? "Activo" : "Inactivo");
            menu.setCodDieta(Integer.parseInt(jtfCodMenu.getText()));

            boolean exito = menuDiarioData.agregarMenuDiario(menu);
            
            if (exito) {
                JOptionPane.showMessageDialog(this, "Menú diario guardado correctamente.");
                cargarDatos();
                limpiarCampos();
                
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar el menú diario.");
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese valores válidos en todos los campos.");
        }
    } 
    
    private void modificar(){
        try {
            MenuDiario menu = new MenuDiario();
            menu.setCodMenu(Integer.parseInt(jtfCodMenu.getText()));
            Date fechaSeleccionada = jdcDia.getDate();
            
            if (fechaSeleccionada == null) {
                JOptionPane.showMessageDialog(this, "Seleccione un día válido.");
                return;
            }
            
            menu.setDia(dateFormat.format(fechaSeleccionada));
            menu.setCaloriasDelMenu(Integer.parseInt(jtfCalorias.getText()));
            menu.setEstado(jrbEstado.isSelected() ? "Activo" : "Inactivo");

            boolean exito = menuDiarioData.actualizarMenuDiario(menu);
            
            if (exito) {
                JOptionPane.showMessageDialog(this, "Menú diario modificado correctamente.");
                cargarDatos();
                limpiarCampos();
                
            } else {
                   JOptionPane.showMessageDialog(this, "Error al modificar el menú diario.");
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese valores válidos en todos los campos.");
        }
    }                                         

    private void eliminar(){
        if (jtfCodMenu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un código de menú válido para eliminar.");
            return;
        }

        try {
            int codMenu = Integer.parseInt(jtfCodMenu.getText());
            boolean exito = menuDiarioData.eliminarMenuDiario(codMenu);
            
            if (exito) {
                JOptionPane.showMessageDialog(this, "Menú diario eliminado correctamente.");
                cargarDatos();
                limpiarCampos();
                
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar el menú diario.");
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un código válido.");
        }
    }
    
    private void buscar(){
        if (jtfCodMenu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un código de menú válido para buscar.");
            return;
        }

        try {
            int codMenu = Integer.parseInt(jtfCodMenu.getText());
            MenuDiario menu = menuDiarioData.buscarMenuDiarioPorId(codMenu);
            
            if (menu != null) {
                jdcDia.setDate(dateFormat.parse(menu.getDia()));
                jtfCalorias.setText(String.valueOf(menu.getCaloriasDelMenu()));
                jrbEstado.setSelected("Activo".equals(menu.getEstado()));
                
            } else {
                JOptionPane.showMessageDialog(this, "Menú diario no encontrado.");
                limpiarCampos();
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un código válido.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar la fecha: " + e.getMessage());
        }
    }
    
}
